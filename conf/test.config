params {
    config_profile_name = 'Test single-end'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    outdir = 'results/test'
    input = 'assets/samplesheet_test.csv' // adapted from https://github.com/nf-core/test-datasets/blob/chipseq/samplesheet/v2.0/samplesheet_test.csv
    genome = 'hg38'

    max_cpus = 32           // for interactive node on biowulf
    max_memory = '120 GB'   // for interactive node on biowulf

    publish_dir_mode = "symlink"

    fastq_screen {
        conf = "${baseDir}/assets/fastq_screen.conf"
        db_dir = '/data/CCBR_Pipeliner/db/PipeDB/lib/fastq_screen_db/'
    }
    align {
        index_dir = "/data/CCBR_Pipeliner/db/PipeDB/Indices/${params.genome}_basic/indexes/"
        blacklist = "${params.genome}.blacklist"
        blacklist_files = "${params.align.index_dir}${params.align.blacklist}*"
        reference_files = "${params.align.index_dir}${params.genome}*"
        min_quality = 6                     // to get a min quality of 5, set this to 6
        effective_genome_size = 2700000000  // source: https://github.com/CCBR/Pipeliner/blob/86c6ccaa3d58381a0ffd696bbf9c047e4f991f9e/hg38.json#L349
        chrom_sizes = "${params.align.index_dir}${params.genome}.fa.sizes"       // source: https://github.com/CCBR/Pipeliner/blob/86c6ccaa3d58381a0ffd696bbf9c047e4f991f9e/hg38.json#L359
    }
    deeptools {
        bin_size = 10000 // this value is only to make bamCoverage run faster. use smaller value for real data.
        smooth_length = 75
        normalize_using = "RPGC"
        excluded_chroms = "chrM chrX chrY"
    }
    gene_info = "/data/CCBR_Pipeliner/db/PipeDB/Indices/${params.genome}_basic/geneinfo.bed"
    gem_read_dist = 'https://groups.csail.mit.edu/cgs/gem/download/Read_Distribution_default.txt'
    chromosomes_dir = "/data/CCBR_Pipeliner/db/PipeDB/Indices/${params.genome}_basic/Chromsomes/*"

    run.call_peaks = false // no peaks with this yeast dataset with hg38 as the reference
}

dag {
    enabled = true
    overwrite = true
    file = "assets/dag.png"
}
report {
    enabled = true
    overwrite = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}
