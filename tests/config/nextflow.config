params {
    outdir = "output/"
    tracedir = "${params.outdir}/pipeline_info"
    publish_dir_mode = "copy"

    // CCBR shared resource paths
    index_dir = '/data/CCBR_Pipeliner/db/PipeDB/Indices'
    fastq_screen {
        conf = "assets/fastq_screen_biowulf.conf"
        db_dir = '/data/CCBR_Pipeliner/db/PipeDB/lib/fastq_screen_db/'
    }
    multiqc {
        config = "assets/multiqc_config.yaml"
        logo = "assets/ccbr_logo.png"
    }
    genomes {
        'hg38' {
            blacklist_index = "${params.index_dir}/hg38_basic/indexes/blacklist/hg38.blacklist_v3.chrM.chr_rDNA.*"
            reference_index = "${params.index_dir}/hg38_basic/bwa_index/hg38*"
            chromosomes_dir = "${params.index_dir}/hg38_basic/Chromsomes/"
            chrom_sizes = "${params.index_dir}/hg38_basic/indexes/hg38.fa.sizes"
            gene_info = "${params.index_dir}/hg38_basic/geneinfo.bed"
            effective_genome_size = 2700000000
        }
        'mm10' {
            blacklist_index = "${params.index_dir}/mm10_basic/indexes/blacklist/mm10.blacklist.chrM.chr_rDNA.*"
            reference_index = "${params.index_dir}/mm10_basic/indexes/reference/mm10*"
            chromosomes_dir = "${params.index_dir}/mm10_basic/Chromsomes/"
            chrom_sizes = "${params.index_dir}/mm10_basic/indexes/mm10.fa.sizes"
            gene_info = "${params.index_dir}/mm10_basic/geneinfo.bed"
            effective_genome_size = 2400000000
        }
    }

}

process {
    cpus = 2
    memory = 3.GB
    time = 2.h
}

if ("$PROFILE" == "singularity") {
    singularity.enabled = true
    singularity.autoMounts = true
} else if ("$PROFILE" == "conda") {
    conda.enabled = true
} else if ("$PROFILE" == "mamba") {
    conda.enabled  = true
    conda.useMamba = true
} else if ("$PROFILE" == "podman") {
    podman.enabled = true
    podman.userEmulation = true
    podman.runOptions = "--runtime crun --platform linux/x86_64 --systemd=always"
} else {
    docker.enabled = true
    docker.userEmulation = true
    docker.runOptions = "--platform linux/x86_64"
}

manifest {
    nextflowVersion = '!>=23.04.0'
}
